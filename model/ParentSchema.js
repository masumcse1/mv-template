export default {
  storages: ["SQL"],
  default: "Entity containing different field types",
  $schema: "http://json-schema.org/draft-07/schema",
  id: "Parent",
  title: "Parent Entity",
  type: "object",
  properties: {
    SelectionMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Selection from List Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_SelectionMatrix",
      title: "Parent.SelectionMatrix",
      type: "array",
      items: {
        id: "CE_Parent_SelectionMatrix_item",
        title: "Parent.SelectionMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_SelectionMatrix_value",
            title: "Parent.SelectionMatrix Value",
            enum: ["123", "bcd", "234", "abc"],
          },
          key: {
            type: "object",
            properties: {
              Selection2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_SelectionMatrix_key_Selection2",
                title:
                  "Parent.SelectionMatrix Key column Selection2 @ 2 - Selection2",
                type: "string",
              },
              Selection1: {
                nullable: false,
                id: "CE_Parent_SelectionMatrix_key_Selection1",
                title:
                  "Parent.SelectionMatrix Key column Selection1 @ 1 - Selection1",
                type: "string",
              },
            },
            required: ["Selection1", "Selection2"],
          },
        },
        required: ["key"],
      },
    },
    TextareaMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_TextareaMap_item",
          title: "Parent.TextareaMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Textarea Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_TextareaMap",
      title: "Parent.TextareaMap",
      type: "object",
    },
    BinarySingle: {
      storages: ["SQL"],
      indexType: "INDEX",
      nullable: true,
      description: "Binary Single",
      readOnly: false,
      versionable: true,
      id: "CE_Parent_BinarySingle",
      title: "Parent.BinarySingle",
      type: "string",
    },
    LongTextSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Long Text Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_LongTextSingle",
      title: "Parent.LongTextSingle",
      type: "string",
    },
    StringMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "String Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_StringMatrix",
      title: "Parent.StringMatrix",
      type: "array",
      items: {
        id: "CE_Parent_StringMatrix_item",
        title: "Parent.StringMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_StringMatrix_value",
            title: "Parent.StringMatrix Value",
            type: "string",
            maxLength: 255,
          },
          key: {
            type: "object",
            properties: {
              StringMatrix1: {
                nullable: false,
                id: "CE_Parent_StringMatrix_key_StringMatrix1",
                title:
                  "Parent.StringMatrix Key column StringMatrix1 @ 1 - StringMatrix1",
                type: "string",
              },
              StringMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_StringMatrix_key_StringMatrix2",
                title:
                  "Parent.StringMatrix Key column StringMatrix2 @ 2 - StringMatrix2",
                type: "string",
              },
            },
            required: ["StringMatrix1", "StringMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    EmbeddedEntitySingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Embedded Entity Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_EmbeddedEntitySingle",
      title: "Parent.EmbeddedEntitySingle",
      type: "string",
    },
    BinaryMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_BinaryMap_item",
          title: "Parent.BinaryMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Binary Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_BinaryMap",
      title: "Parent.BinaryMap",
      type: "object",
    },
    TextareaMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "TextareaMatrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_TextareaMatrix",
      title: "Parent.TextareaMatrix",
      type: "array",
      items: {
        id: "CE_Parent_TextareaMatrix_item",
        title: "Parent.TextareaMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_TextareaMatrix_value",
            title: "Parent.TextareaMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              TextareaMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_TextareaMatrix_key_TextareaMatrix2",
                title:
                  "Parent.TextareaMatrix Key column TextareaMatrix2 @ 2 - TextareaMatrix2",
                type: "string",
              },
              TextareaMatrix1: {
                nullable: false,
                id: "CE_Parent_TextareaMatrix_key_TextareaMatrix1",
                title:
                  "Parent.TextareaMatrix Key column TextareaMatrix1 @ 1 - TextareaMatrix1",
                type: "string",
              },
            },
            required: ["TextareaMatrix1", "TextareaMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    BinaryList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Binary List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_BinaryList",
      title: "Parent.BinaryList",
      type: "array",
      items: {
        id: "CE_Parent_BinaryList_item",
        title: "Parent.BinaryList item",
        type: "string",
      },
    },
    DateMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          format: "date-time",
          id: "CE_Parent_DateMap_item",
          title: "Parent.DateMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Date Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_DateMap",
      title: "Parent.DateMap",
      type: "object",
    },
    DoubleList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Double List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_DoubleList",
      title: "Parent.DoubleList",
      type: "array",
      items: {
        id: "CE_Parent_DoubleList_item",
        title: "Parent.DoubleList item",
        type: "number",
      },
    },
    DoubleSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Double Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_DoubleSingle",
      title: "Parent.DoubleSingle",
      type: "number",
    },
    MultiValue: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "MultiValue",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_MultiValue",
      title: "Parent.MultiValue",
      type: "array",
      items: {
        id: "CE_Parent_MultiValue_item",
        title: "Parent.MultiValue item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_MultiValue_value",
            title: "Parent.MultiValue Value",
            type: "object",
            properties: {
              MultiValueLong: {
                id: "CE_Parent_MultiValue_value_MultiValueLong",
                title:
                  "Parent.MultiValue Value column MultiValueLong @ 3 - MultiValueLong",
                type: "integer",
              },
              MultiValueTextArea: {
                id: "CE_Parent_MultiValue_value_MultiValueTextArea",
                title:
                  "Parent.MultiValue Value column MultiValueTextArea @ 2 - MultiValueTextArea",
                type: "string",
              },
              MultiValueString: {
                id: "CE_Parent_MultiValue_value_MultiValueString",
                title:
                  "Parent.MultiValue Value column MultiValueString @ 1 - MultiValueString",
                type: "string",
              },
              MultiValueDouble: {
                id: "CE_Parent_MultiValue_value_MultiValueDouble",
                title:
                  "Parent.MultiValue Value column MultiValueDouble @ 4 - MultiValueDouble",
                type: "number",
              },
            },
          },
          key: {
            type: "object",
            properties: {
              MultiValueKey2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_MultiValue_key_MultiValueKey2",
                title:
                  "Parent.MultiValue Key column MultiValueKey2 @ 2 - MultiValueKey2",
                type: "string",
              },
              MultiValueKey1: {
                nullable: false,
                id: "CE_Parent_MultiValue_key_MultiValueKey1",
                title:
                  "Parent.MultiValue Key column MultiValueKey1 @ 1 - MultiValueKey1",
                type: "string",
              },
            },
            required: ["MultiValueKey1", "MultiValueKey2"],
          },
        },
        required: ["key"],
      },
    },
    TextareaSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Textarea Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_TextareaSingle",
      title: "Parent.TextareaSingle",
      type: "string",
    },
    BooleanSingle: {
      storages: ["SQL"],
      default: "false",
      nullable: true,
      description: "Boolean Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_BooleanSingle",
      title: "Parent.BooleanSingle",
      type: "string",
    },
    LongMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_LongMap_item",
          title: "Parent.LongMap item",
          type: "integer",
        },
      },
      nullable: true,
      description: "Long Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_LongMap",
      title: "Parent.LongMap",
      type: "object",
    },
    LongTextList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Long Text List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_LongTextList",
      title: "Parent.LongTextList",
      type: "array",
      items: {
        id: "CE_Parent_LongTextList_item",
        title: "Parent.LongTextList item",
        type: "string",
      },
    },
    SelectionSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Selection from List Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_SelectionSingle",
      title: "Parent.SelectionSingle",
      enum: ["123", "bcd", "234", "abc"],
    },
    SecretMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_SecretMap_item",
          title: "Parent.SecretMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Secret Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_SecretMap",
      title: "Parent.SecretMap",
      type: "object",
    },
    LongMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Long Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_LongMatrix",
      title: "Parent.LongMatrix",
      type: "array",
      items: {
        id: "CE_Parent_LongMatrix_item",
        title: "Parent.LongMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_LongMatrix_value",
            title: "Parent.LongMatrix Value",
            type: "integer",
          },
          key: {
            type: "object",
            properties: {
              LongMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_LongMatrix_key_LongMatrix2",
                title:
                  "Parent.LongMatrix Key column LongMatrix2 @ 2 - LongMatrix2",
                type: "string",
              },
              LongMatrix1: {
                nullable: false,
                id: "CE_Parent_LongMatrix_key_LongMatrix1",
                title:
                  "Parent.LongMatrix Key column LongMatrix1 @ 1 - LongMatrix1",
                type: "string",
              },
            },
            required: ["LongMatrix1", "LongMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    TextareaList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Textarea List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_TextareaList",
      title: "Parent.TextareaList",
      type: "array",
      items: {
        id: "CE_Parent_TextareaList_item",
        title: "Parent.TextareaList item",
        type: "string",
      },
    },
    ExpressionSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Expression Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_ExpressionSingle",
      title: "Parent.ExpressionSingle",
      type: "string",
    },
    SelectionList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "List of Selection from List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_SelectionList",
      title: "Parent.SelectionList",
      type: "array",
      items: {
        id: "CE_Parent_SelectionList_item",
        title: "Parent.SelectionList item",
        enum: ["123", "bcd", "234", "abc"],
      },
    },
    DateList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "DateList",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_DateList",
      title: "Parent.DateList",
      type: "array",
      items: {
        format: "date-time",
        id: "CE_Parent_DateList_item",
        title: "Parent.DateList item",
        type: "string",
      },
    },
    BooleanList: {
      storages: ["SQL"],
      default: "false",
      nullable: true,
      uniqueItems: true,
      description: "Boolean List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_BooleanList",
      title: "Parent.BooleanList",
      type: "array",
      items: {
        default: "false",
        id: "CE_Parent_BooleanList_item",
        title: "Parent.BooleanList item",
        type: "string",
      },
    },
    EmbeddedEntityMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_EmbeddedEntityMap_item",
          title: "Parent.EmbeddedEntityMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Embedded Entity Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_EmbeddedEntityMap",
      title: "Parent.EmbeddedEntityMap",
      type: "object",
    },
    LongTextMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_LongTextMap_item",
          title: "Parent.LongTextMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Long Text Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_LongTextMap",
      title: "Parent.LongTextMap",
      type: "object",
    },
    SecretSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Secret Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_SecretSingle",
      title: "Parent.SecretSingle",
      type: "string",
      maxLength: 255,
    },
    StringMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_StringMap_item",
          title: "Parent.StringMap item",
          type: "string",
          maxLength: 255,
        },
      },
      nullable: true,
      description: "String Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_StringMap",
      title: "Parent.StringMap",
      type: "object",
    },
    SecretList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Secret List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_SecretList",
      title: "Parent.SecretList",
      type: "array",
      items: {
        id: "CE_Parent_SecretList_item",
        title: "Parent.SecretList item",
        type: "string",
      },
    },
    ChildList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Child Entity List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_ChildList",
      title: "Parent.ChildList",
      type: "array",
      items: {
        id: "CE_Parent_ChildList_item",
        title: "Parent.ChildList item",
        $ref: "Child",
      },
    },
    ChildSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Child Entity Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_ChildSingle",
      title: "Parent.ChildSingle",
      $ref: "Child",
    },
    BooleanMatrix: {
      storages: ["SQL"],
      default: "false",
      nullable: true,
      uniqueItems: true,
      description: "Boolean Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_BooleanMatrix",
      title: "Parent.BooleanMatrix",
      type: "array",
      items: {
        id: "CE_Parent_BooleanMatrix_item",
        title: "Parent.BooleanMatrix item",
        type: "object",
        properties: {
          value: {
            default: "false",
            id: "CE_Parent_BooleanMatrix_value",
            title: "Parent.BooleanMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              BooleanMatrix1: {
                nullable: false,
                id: "CE_Parent_BooleanMatrix_key_BooleanMatrix1",
                title:
                  "Parent.BooleanMatrix Key column BooleanMatrix1 @ 1 - BooleanMatrix1",
                type: "string",
              },
              BooleanMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_BooleanMatrix_key_BooleanMatrix2",
                title:
                  "Parent.BooleanMatrix Key column BooleanMatrix2 @ 2 - BooleanMatrix2",
                type: "string",
              },
            },
            required: ["BooleanMatrix1", "BooleanMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    DoubleMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_DoubleMap_item",
          title: "Parent.DoubleMap item",
          type: "number",
        },
      },
      nullable: true,
      description: "Double Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_DoubleMap",
      title: "Parent.DoubleMap",
      type: "object",
    },
    EmbeddedEntityList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Embedded Entity List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_EmbeddedEntityList",
      title: "Parent.EmbeddedEntityList",
      type: "array",
      items: {
        id: "CE_Parent_EmbeddedEntityList_item",
        title: "Parent.EmbeddedEntityList item",
        type: "string",
      },
    },
    StringSingle: {
      storages: ["SQL"],
      default: "DEFAULT VALUE",
      indexType: "STORE_ONLY",
      nullable: false,
      minLength: 1,
      description: "String Single",
      readOnly: false,
      versionable: true,
      id: "CE_Parent_StringSingle",
      title: "Parent.StringSingle",
      type: "string",
      maxLength: 255,
    },
    DateSingle: {
      storages: ["SQL"],
      nullable: true,
      format: "date-time",
      description: "Date Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_DateSingle",
      title: "Parent.DateSingle",
      type: "string",
    },
    ExpressionList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Expression List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_ExpressionList",
      title: "Parent.ExpressionList",
      type: "array",
      items: {
        id: "CE_Parent_ExpressionList_item",
        title: "Parent.ExpressionList item",
        type: "string",
      },
    },
    RefEntityMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Reference to Entity Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_RefEntityMatrix",
      title: "Parent.RefEntityMatrix",
      type: "array",
      items: {
        id: "CE_Parent_RefEntityMatrix_item",
        title: "Parent.RefEntityMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_RefEntityMatrix_value",
            title: "Parent.RefEntityMatrix Value",
            $ref: "Child",
          },
          key: {
            type: "object",
            properties: {
              RefEntityMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_RefEntityMatrix_key_RefEntityMatrix2",
                title:
                  "Parent.RefEntityMatrix Key column RefEntityMatrix2 @ 2 - RefEntityMatrix2",
                type: "string",
              },
              RefEntityMatrix1: {
                nullable: false,
                id: "CE_Parent_RefEntityMatrix_key_RefEntityMatrix1",
                title:
                  "Parent.RefEntityMatrix Key column RefEntityMatrix1 @ 1 - RefEntityMatrix1",
                type: "string",
              },
            },
            required: ["RefEntityMatrix1", "RefEntityMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    LongTextMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "LongTextMatrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_LongTextMatrix",
      title: "Parent.LongTextMatrix",
      type: "array",
      items: {
        id: "CE_Parent_LongTextMatrix_item",
        title: "Parent.LongTextMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_LongTextMatrix_value",
            title: "Parent.LongTextMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              LongTextMatrix1: {
                nullable: false,
                id: "CE_Parent_LongTextMatrix_key_LongTextMatrix1",
                title:
                  "Parent.LongTextMatrix Key column LongTextMatrix1 @ 1 - LongTextMatrix1",
                type: "string",
              },
              LongTextMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_LongTextMatrix_key_LongTextMatrix2",
                title:
                  "Parent.LongTextMatrix Key column LongTextMatrix2 @ 2 - LongTextMatrix2",
                type: "string",
              },
            },
            required: ["LongTextMatrix1", "LongTextMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    RefEntityList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Reference to Entity List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_RefEntityList",
      title: "Parent.RefEntityList",
      type: "array",
      items: {
        id: "CE_Parent_RefEntityList_item",
        title: "Parent.RefEntityList item",
        $ref: "Child",
      },
    },
    SelectionMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_SelectionMap_item",
          title: "Parent.SelectionMap item",
          enum: ["123", "bcd", "234", "abc"],
        },
      },
      nullable: true,
      description: "Selection from List Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_SelectionMap",
      title: "Parent.SelectionMap",
      type: "object",
    },
    BinaryMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Binary Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_BinaryMatrix",
      title: "Parent.BinaryMatrix",
      type: "array",
      items: {
        id: "CE_Parent_BinaryMatrix_item",
        title: "Parent.BinaryMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_BinaryMatrix_value",
            title: "Parent.BinaryMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              BinaryMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_BinaryMatrix_key_BinaryMatrix2",
                title:
                  "Parent.BinaryMatrix Key column BinaryMatrix2 @ 2 - BinaryMatrix2",
                type: "string",
              },
              BinaryMatrix1: {
                nullable: false,
                id: "CE_Parent_BinaryMatrix_key_BinaryMatrix1",
                title:
                  "Parent.BinaryMatrix Key column BinaryMatrix1 @ 1 - BinaryMatrix1",
                type: "string",
              },
            },
            required: ["BinaryMatrix1", "BinaryMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    StringList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "String List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_StringList",
      title: "Parent.StringList",
      type: "array",
      items: {
        id: "CE_Parent_StringList_item",
        title: "Parent.StringList item",
        type: "string",
        maxLength: 255,
      },
    },
    ExpressionMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Expression Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_ExpressionMatrix",
      title: "Parent.ExpressionMatrix",
      type: "array",
      items: {
        id: "CE_Parent_ExpressionMatrix_item",
        title: "Parent.ExpressionMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_ExpressionMatrix_value",
            title: "Parent.ExpressionMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              ExpressionMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_ExpressionMatrix_key_ExpressionMatrix2",
                title:
                  "Parent.ExpressionMatrix Key column ExpressionMatrix2 @ 2 - ExpressionMatrix2",
                type: "string",
              },
              ExpressionMatrix1: {
                nullable: false,
                id: "CE_Parent_ExpressionMatrix_key_ExpressionMatrix1",
                title:
                  "Parent.ExpressionMatrix Key column ExpressionMatrix1 @ 1 - ExpressionMatrix1",
                type: "string",
              },
            },
            required: ["ExpressionMatrix1", "ExpressionMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    RefEntitySingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Reference to Entity Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_RefEntitySingle",
      title: "Parent.RefEntitySingle",
      $ref: "Child",
    },
    LongList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Long List",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_LongList",
      title: "Parent.LongList",
      type: "array",
      items: {
        id: "CE_Parent_LongList_item",
        title: "Parent.LongList item",
        type: "integer",
      },
    },
    ExpressionMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_ExpressionMap_item",
          title: "Parent.ExpressionMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Expression Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_ExpressionMap",
      title: "Parent.ExpressionMap",
      type: "object",
    },
    DateMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "DateMatrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_DateMatrix",
      title: "Parent.DateMatrix",
      type: "array",
      items: {
        id: "CE_Parent_DateMatrix_item",
        title: "Parent.DateMatrix item",
        type: "object",
        properties: {
          value: {
            format: "date-time",
            id: "CE_Parent_DateMatrix_value",
            title: "Parent.DateMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              DateMatrix1: {
                nullable: false,
                id: "CE_Parent_DateMatrix_key_DateMatrix1",
                title:
                  "Parent.DateMatrix Key column DateMatrix1 @ 1 - DateMatrix1",
                type: "string",
              },
              DateMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_DateMatrix_key_DateMatrix2",
                title:
                  "Parent.DateMatrix Key column DateMatrix2 @ 2 - DateMatrix2",
                type: "string",
              },
            },
            required: ["DateMatrix1", "DateMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    DoubleMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Double Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_DoubleMatrix",
      title: "Parent.DoubleMatrix",
      type: "array",
      items: {
        id: "CE_Parent_DoubleMatrix_item",
        title: "Parent.DoubleMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_DoubleMatrix_value",
            title: "Parent.DoubleMatrix Value",
            type: "number",
          },
          key: {
            type: "object",
            properties: {
              DoubleMatrix1: {
                nullable: false,
                id: "CE_Parent_DoubleMatrix_key_DoubleMatrix1",
                title:
                  "Parent.DoubleMatrix Key column DoubleMatrix1 @ 1 - DoubleMatrix1",
                type: "string",
              },
              DoubleMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_DoubleMatrix_key_DoubleMatrix2",
                title:
                  "Parent.DoubleMatrix Key column DoubleMatrix2 @ 2 - DoubleMatrix2",
                type: "string",
              },
            },
            required: ["DoubleMatrix1", "DoubleMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    RefEntityMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_Parent_RefEntityMap_item",
          title: "Parent.RefEntityMap item",
          $ref: "Child",
        },
      },
      nullable: true,
      description: "Reference to Entity Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_RefEntityMap",
      title: "Parent.RefEntityMap",
      type: "object",
    },
    BooleanMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          default: "false",
          id: "CE_Parent_BooleanMap_item",
          title: "Parent.BooleanMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Boolean Map",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_BooleanMap",
      title: "Parent.BooleanMap",
      type: "object",
    },
    EmbeddedEntityMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Embedded Entity Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_EmbeddedEntityMatrix",
      title: "Parent.EmbeddedEntityMatrix",
      type: "array",
      items: {
        id: "CE_Parent_EmbeddedEntityMatrix_item",
        title: "Parent.EmbeddedEntityMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_EmbeddedEntityMatrix_value",
            title: "Parent.EmbeddedEntityMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              EmbeddedEntityMat1: {
                nullable: false,
                id: "CE_Parent_EmbeddedEntityMatrix_key_EmbeddedEntityMat1",
                title:
                  "Parent.EmbeddedEntityMatrix Key column EmbeddedEntityMat1 @ 1 - EmbeddedEntityMat1",
                type: "string",
              },
              EmbeddedEntityMat2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_EmbeddedEntityMatrix_key_EmbeddedEntityMat2",
                title:
                  "Parent.EmbeddedEntityMatrix Key column EmbeddedEntityMat2 @ 2 - EmbeddedEntityMat2",
                type: "string",
              },
            },
            required: ["EmbeddedEntityMat1", "EmbeddedEntityMat2"],
          },
        },
        required: ["key"],
      },
    },
    LongSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Long Single",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_LongSingle",
      title: "Parent.LongSingle",
      type: "integer",
    },
    SecretMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Secret Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_Parent_SecretMatrix",
      title: "Parent.SecretMatrix",
      type: "array",
      items: {
        id: "CE_Parent_SecretMatrix_item",
        title: "Parent.SecretMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_Parent_SecretMatrix_value",
            title: "Parent.SecretMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              SecretMatrix1: {
                nullable: false,
                id: "CE_Parent_SecretMatrix_key_SecretMatrix1",
                title:
                  "Parent.SecretMatrix Key column SecretMatrix1 @ 1 - SecretMatrix1",
                type: "string",
              },
              SecretMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_Parent_SecretMatrix_key_SecretMatrix2",
                title:
                  "Parent.SecretMatrix Key column SecretMatrix2 @ 2 - SecretMatrix2",
                type: "string",
              },
            },
            required: ["SecretMatrix1", "SecretMatrix2"],
          },
        },
        required: ["key"],
      },
    },
  },
  required: ["StringSingle"],
};
