export default {
  storages: ["SQL"],
  default: "Entity containing different field types",
  $schema: "http://json-schema.org/draft-07/schema",
  id: "TestEntity",
  title: "Test Entity",
  type: "object",
  properties: {
    SelectionMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Selection from List Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_SelectionMatrix",
      title: "TestEntity.SelectionMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_SelectionMatrix_item",
        title: "TestEntity.SelectionMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_SelectionMatrix_value",
            title: "TestEntity.SelectionMatrix Value",
            enum: ["123", "bcd", "234", "abc"],
          },
          key: {
            type: "object",
            properties: {
              Selection2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_SelectionMatrix_key_Selection2",
                title:
                  "TestEntity.SelectionMatrix Key column Selection2 @ 2 - Selection2",
                type: "string",
              },
              Selection1: {
                nullable: false,
                id: "CE_TestEntity_SelectionMatrix_key_Selection1",
                title:
                  "TestEntity.SelectionMatrix Key column Selection1 @ 1 - Selection1",
                type: "string",
              },
            },
            required: ["Selection1", "Selection2"],
          },
        },
        required: ["key"],
      },
    },
    TextareaMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_TextareaMap_item",
          title: "TestEntity.TextareaMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Textarea Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_TextareaMap",
      title: "TestEntity.TextareaMap",
      type: "object",
    },
    BinarySingle: {
      storages: ["SQL"],
      indexType: "INDEX",
      nullable: true,
      description: "Binary Single",
      readOnly: false,
      versionable: true,
      id: "CE_TestEntity_BinarySingle",
      title: "TestEntity.BinarySingle",
      type: "string",
    },
    LongTextSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Long Text Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_LongTextSingle",
      title: "TestEntity.LongTextSingle",
      type: "string",
    },
    StringMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "String Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_StringMatrix",
      title: "TestEntity.StringMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_StringMatrix_item",
        title: "TestEntity.StringMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_StringMatrix_value",
            title: "TestEntity.StringMatrix Value",
            type: "string",
            maxLength: 255,
          },
          key: {
            type: "object",
            properties: {
              StringMatrix1: {
                nullable: false,
                id: "CE_TestEntity_StringMatrix_key_StringMatrix1",
                title:
                  "TestEntity.StringMatrix Key column StringMatrix1 @ 1 - StringMatrix1",
                type: "string",
              },
              StringMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_StringMatrix_key_StringMatrix2",
                title:
                  "TestEntity.StringMatrix Key column StringMatrix2 @ 2 - StringMatrix2",
                type: "string",
              },
            },
            required: ["StringMatrix1", "StringMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    EmbeddedEntitySingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Embedded Entity Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_EmbeddedEntitySingle",
      title: "TestEntity.EmbeddedEntitySingle",
      type: "string",
    },
    BinaryMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_BinaryMap_item",
          title: "TestEntity.BinaryMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Binary Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_BinaryMap",
      title: "TestEntity.BinaryMap",
      type: "object",
    },
    TextareaMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "TextareaMatrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_TextareaMatrix",
      title: "TestEntity.TextareaMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_TextareaMatrix_item",
        title: "TestEntity.TextareaMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_TextareaMatrix_value",
            title: "TestEntity.TextareaMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              TextareaMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_TextareaMatrix_key_TextareaMatrix2",
                title:
                  "TestEntity.TextareaMatrix Key column TextareaMatrix2 @ 2 - TextareaMatrix2",
                type: "string",
              },
              TextareaMatrix1: {
                nullable: false,
                id: "CE_TestEntity_TextareaMatrix_key_TextareaMatrix1",
                title:
                  "TestEntity.TextareaMatrix Key column TextareaMatrix1 @ 1 - TextareaMatrix1",
                type: "string",
              },
            },
            required: ["TextareaMatrix1", "TextareaMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    BinaryList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Binary List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_BinaryList",
      title: "TestEntity.BinaryList",
      type: "array",
      items: {
        id: "CE_TestEntity_BinaryList_item",
        title: "TestEntity.BinaryList item",
        type: "string",
      },
    },
    DateMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          format: "date-time",
          id: "CE_TestEntity_DateMap_item",
          title: "TestEntity.DateMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Date Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_DateMap",
      title: "TestEntity.DateMap",
      type: "object",
    },
    DoubleList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Double List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_DoubleList",
      title: "TestEntity.DoubleList",
      type: "array",
      items: {
        id: "CE_TestEntity_DoubleList_item",
        title: "TestEntity.DoubleList item",
        type: "number",
      },
    },
    DoubleSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Double Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_DoubleSingle",
      title: "TestEntity.DoubleSingle",
      type: "number",
    },
    MultiValue: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "MultiValue",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_MultiValue",
      title: "TestEntity.MultiValue",
      type: "array",
      items: {
        id: "CE_TestEntity_MultiValue_item",
        title: "TestEntity.MultiValue item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_MultiValue_value",
            title: "TestEntity.MultiValue Value",
            type: "object",
            properties: {
              MultiValueLong: {
                id: "CE_TestEntity_MultiValue_value_MultiValueLong",
                title:
                  "TestEntity.MultiValue Value column MultiValueLong @ 3 - MultiValueLong",
                type: "integer",
              },
              MultiValueTextArea: {
                id: "CE_TestEntity_MultiValue_value_MultiValueTextArea",
                title:
                  "TestEntity.MultiValue Value column MultiValueTextArea @ 2 - MultiValueTextArea",
                type: "string",
              },
              MultiValueString: {
                id: "CE_TestEntity_MultiValue_value_MultiValueString",
                title:
                  "TestEntity.MultiValue Value column MultiValueString @ 1 - MultiValueString",
                type: "string",
              },
              MultiValueDouble: {
                id: "CE_TestEntity_MultiValue_value_MultiValueDouble",
                title:
                  "TestEntity.MultiValue Value column MultiValueDouble @ 4 - MultiValueDouble",
                type: "number",
              },
            },
          },
          key: {
            type: "object",
            properties: {
              MultiValueKey2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_MultiValue_key_MultiValueKey2",
                title:
                  "TestEntity.MultiValue Key column MultiValueKey2 @ 2 - MultiValueKey2",
                type: "string",
              },
              MultiValueKey1: {
                nullable: false,
                id: "CE_TestEntity_MultiValue_key_MultiValueKey1",
                title:
                  "TestEntity.MultiValue Key column MultiValueKey1 @ 1 - MultiValueKey1",
                type: "string",
              },
            },
            required: ["MultiValueKey1", "MultiValueKey2"],
          },
        },
        required: ["key"],
      },
    },
    TextareaSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Textarea Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_TextareaSingle",
      title: "TestEntity.TextareaSingle",
      type: "string",
    },
    BooleanSingle: {
      storages: ["SQL"],
      default: "false",
      nullable: true,
      description: "Boolean Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_BooleanSingle",
      title: "TestEntity.BooleanSingle",
      type: "string",
    },
    LongMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_LongMap_item",
          title: "TestEntity.LongMap item",
          type: "integer",
        },
      },
      nullable: true,
      description: "Long Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_LongMap",
      title: "TestEntity.LongMap",
      type: "object",
    },
    LongTextList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Long Text List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_LongTextList",
      title: "TestEntity.LongTextList",
      type: "array",
      items: {
        id: "CE_TestEntity_LongTextList_item",
        title: "TestEntity.LongTextList item",
        type: "string",
      },
    },
    SelectionSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Selection from List Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_SelectionSingle",
      title: "TestEntity.SelectionSingle",
      enum: ["123", "bcd", "234", "abc"],
    },
    SecretMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_SecretMap_item",
          title: "TestEntity.SecretMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Secret Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_SecretMap",
      title: "TestEntity.SecretMap",
      type: "object",
    },
    LongMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Long Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_LongMatrix",
      title: "TestEntity.LongMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_LongMatrix_item",
        title: "TestEntity.LongMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_LongMatrix_value",
            title: "TestEntity.LongMatrix Value",
            type: "integer",
          },
          key: {
            type: "object",
            properties: {
              LongMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_LongMatrix_key_LongMatrix2",
                title:
                  "TestEntity.LongMatrix Key column LongMatrix2 @ 2 - LongMatrix2",
                type: "string",
              },
              LongMatrix1: {
                nullable: false,
                id: "CE_TestEntity_LongMatrix_key_LongMatrix1",
                title:
                  "TestEntity.LongMatrix Key column LongMatrix1 @ 1 - LongMatrix1",
                type: "string",
              },
            },
            required: ["LongMatrix1", "LongMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    TextareaList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Textarea List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_TextareaList",
      title: "TestEntity.TextareaList",
      type: "array",
      items: {
        id: "CE_TestEntity_TextareaList_item",
        title: "TestEntity.TextareaList item",
        type: "string",
      },
    },
    ExpressionSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Expression Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_ExpressionSingle",
      title: "TestEntity.ExpressionSingle",
      type: "string",
    },
    SelectionList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "List of Selection from List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_SelectionList",
      title: "TestEntity.SelectionList",
      type: "array",
      items: {
        id: "CE_TestEntity_SelectionList_item",
        title: "TestEntity.SelectionList item",
        enum: ["123", "bcd", "234", "abc"],
      },
    },
    DateList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "DateList",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_DateList",
      title: "TestEntity.DateList",
      type: "array",
      items: {
        format: "date-time",
        id: "CE_TestEntity_DateList_item",
        title: "TestEntity.DateList item",
        type: "string",
      },
    },
    BooleanList: {
      storages: ["SQL"],
      default: "false",
      nullable: true,
      uniqueItems: true,
      description: "Boolean List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_BooleanList",
      title: "TestEntity.BooleanList",
      type: "array",
      items: {
        default: "false",
        id: "CE_TestEntity_BooleanList_item",
        title: "TestEntity.BooleanList item",
        type: "string",
      },
    },
    EmbeddedEntityMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_EmbeddedEntityMap_item",
          title: "TestEntity.EmbeddedEntityMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Embedded Entity Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_EmbeddedEntityMap",
      title: "TestEntity.EmbeddedEntityMap",
      type: "object",
    },
    LongTextMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_LongTextMap_item",
          title: "TestEntity.LongTextMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Long Text Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_LongTextMap",
      title: "TestEntity.LongTextMap",
      type: "object",
    },
    SecretSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Secret Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_SecretSingle",
      title: "TestEntity.SecretSingle",
      type: "string",
      maxLength: 255,
    },
    StringMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_StringMap_item",
          title: "TestEntity.StringMap item",
          type: "string",
          maxLength: 255,
        },
      },
      nullable: true,
      description: "String Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_StringMap",
      title: "TestEntity.StringMap",
      type: "object",
    },
    SecretList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Secret List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_SecretList",
      title: "TestEntity.SecretList",
      type: "array",
      items: {
        id: "CE_TestEntity_SecretList_item",
        title: "TestEntity.SecretList item",
        type: "string",
      },
    },
    ChildEntityList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Child Entity List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_ChildEntityList",
      title: "TestEntity.ChildEntityList",
      type: "array",
      items: {
        id: "CE_TestEntity_ChildEntityList_item",
        title: "TestEntity.ChildEntityList item",
        $ref: "ChildEntity",
      },
    },
    ChildEntitySingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Child Entity Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_ChildEntitySingle",
      title: "TestEntity.ChildEntitySingle",
      $ref: "ChildEntity",
    },
    BooleanMatrix: {
      storages: ["SQL"],
      default: "false",
      nullable: true,
      uniqueItems: true,
      description: "Boolean Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_BooleanMatrix",
      title: "TestEntity.BooleanMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_BooleanMatrix_item",
        title: "TestEntity.BooleanMatrix item",
        type: "object",
        properties: {
          value: {
            default: "false",
            id: "CE_TestEntity_BooleanMatrix_value",
            title: "TestEntity.BooleanMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              BooleanMatrix1: {
                nullable: false,
                id: "CE_TestEntity_BooleanMatrix_key_BooleanMatrix1",
                title:
                  "TestEntity.BooleanMatrix Key column BooleanMatrix1 @ 1 - BooleanMatrix1",
                type: "string",
              },
              BooleanMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_BooleanMatrix_key_BooleanMatrix2",
                title:
                  "TestEntity.BooleanMatrix Key column BooleanMatrix2 @ 2 - BooleanMatrix2",
                type: "string",
              },
            },
            required: ["BooleanMatrix1", "BooleanMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    DoubleMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_DoubleMap_item",
          title: "TestEntity.DoubleMap item",
          type: "number",
        },
      },
      nullable: true,
      description: "Double Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_DoubleMap",
      title: "TestEntity.DoubleMap",
      type: "object",
    },
    EmbeddedEntityList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Embedded Entity List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_EmbeddedEntityList",
      title: "TestEntity.EmbeddedEntityList",
      type: "array",
      items: {
        id: "CE_TestEntity_EmbeddedEntityList_item",
        title: "TestEntity.EmbeddedEntityList item",
        type: "string",
      },
    },
    StringSingle: {
      storages: ["SQL"],
      default: "DEFAULT VALUE",
      indexType: "STORE_ONLY",
      nullable: false,
      minLength: 1,
      description: "String Single",
      readOnly: false,
      versionable: true,
      id: "CE_TestEntity_StringSingle",
      title: "TestEntity.StringSingle",
      type: "string",
      maxLength: 255,
    },
    DateSingle: {
      storages: ["SQL"],
      nullable: true,
      format: "date-time",
      description: "Date Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_DateSingle",
      title: "TestEntity.DateSingle",
      type: "string",
    },
    ExpressionList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Expression List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_ExpressionList",
      title: "TestEntity.ExpressionList",
      type: "array",
      items: {
        id: "CE_TestEntity_ExpressionList_item",
        title: "TestEntity.ExpressionList item",
        type: "string",
      },
    },
    RefEntityMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Reference to Entity Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_RefEntityMatrix",
      title: "TestEntity.RefEntityMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_RefEntityMatrix_item",
        title: "TestEntity.RefEntityMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_RefEntityMatrix_value",
            title: "TestEntity.RefEntityMatrix Value",
            $ref: "./ChildEntity",
          },
          key: {
            type: "object",
            properties: {
              RefEntityMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_RefEntityMatrix_key_RefEntityMatrix2",
                title:
                  "TestEntity.RefEntityMatrix Key column RefEntityMatrix2 @ 2 - RefEntityMatrix2",
                type: "string",
              },
              RefEntityMatrix1: {
                nullable: false,
                id: "CE_TestEntity_RefEntityMatrix_key_RefEntityMatrix1",
                title:
                  "TestEntity.RefEntityMatrix Key column RefEntityMatrix1 @ 1 - RefEntityMatrix1",
                type: "string",
              },
            },
            required: ["RefEntityMatrix1", "RefEntityMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    LongTextMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "LongTextMatrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_LongTextMatrix",
      title: "TestEntity.LongTextMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_LongTextMatrix_item",
        title: "TestEntity.LongTextMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_LongTextMatrix_value",
            title: "TestEntity.LongTextMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              LongTextMatrix1: {
                nullable: false,
                id: "CE_TestEntity_LongTextMatrix_key_LongTextMatrix1",
                title:
                  "TestEntity.LongTextMatrix Key column LongTextMatrix1 @ 1 - LongTextMatrix1",
                type: "string",
              },
              LongTextMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_LongTextMatrix_key_LongTextMatrix2",
                title:
                  "TestEntity.LongTextMatrix Key column LongTextMatrix2 @ 2 - LongTextMatrix2",
                type: "string",
              },
            },
            required: ["LongTextMatrix1", "LongTextMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    RefEntityList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Reference to Entity List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_RefEntityList",
      title: "TestEntity.RefEntityList",
      type: "array",
      items: {
        id: "CE_TestEntity_RefEntityList_item",
        title: "TestEntity.RefEntityList item",
        $ref: "ChildEntity",
      },
    },
    SelectionMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_SelectionMap_item",
          title: "TestEntity.SelectionMap item",
          enum: ["123", "bcd", "234", "abc"],
        },
      },
      nullable: true,
      description: "Selection from List Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_SelectionMap",
      title: "TestEntity.SelectionMap",
      type: "object",
    },
    BinaryMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Binary Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_BinaryMatrix",
      title: "TestEntity.BinaryMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_BinaryMatrix_item",
        title: "TestEntity.BinaryMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_BinaryMatrix_value",
            title: "TestEntity.BinaryMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              BinaryMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_BinaryMatrix_key_BinaryMatrix2",
                title:
                  "TestEntity.BinaryMatrix Key column BinaryMatrix2 @ 2 - BinaryMatrix2",
                type: "string",
              },
              BinaryMatrix1: {
                nullable: false,
                id: "CE_TestEntity_BinaryMatrix_key_BinaryMatrix1",
                title:
                  "TestEntity.BinaryMatrix Key column BinaryMatrix1 @ 1 - BinaryMatrix1",
                type: "string",
              },
            },
            required: ["BinaryMatrix1", "BinaryMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    StringList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "String List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_StringList",
      title: "TestEntity.StringList",
      type: "array",
      items: {
        id: "CE_TestEntity_StringList_item",
        title: "TestEntity.StringList item",
        type: "string",
        maxLength: 255,
      },
    },
    ExpressionMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Expression Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_ExpressionMatrix",
      title: "TestEntity.ExpressionMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_ExpressionMatrix_item",
        title: "TestEntity.ExpressionMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_ExpressionMatrix_value",
            title: "TestEntity.ExpressionMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              ExpressionMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_ExpressionMatrix_key_ExpressionMatrix2",
                title:
                  "TestEntity.ExpressionMatrix Key column ExpressionMatrix2 @ 2 - ExpressionMatrix2",
                type: "string",
              },
              ExpressionMatrix1: {
                nullable: false,
                id: "CE_TestEntity_ExpressionMatrix_key_ExpressionMatrix1",
                title:
                  "TestEntity.ExpressionMatrix Key column ExpressionMatrix1 @ 1 - ExpressionMatrix1",
                type: "string",
              },
            },
            required: ["ExpressionMatrix1", "ExpressionMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    RefEntitySingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Reference to Entity Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_RefEntitySingle",
      title: "TestEntity.RefEntitySingle",
      $ref: "ChildEntity",
    },
    LongList: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Long List",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_LongList",
      title: "TestEntity.LongList",
      type: "array",
      items: {
        id: "CE_TestEntity_LongList_item",
        title: "TestEntity.LongList item",
        type: "integer",
      },
    },
    ExpressionMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_ExpressionMap_item",
          title: "TestEntity.ExpressionMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Expression Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_ExpressionMap",
      title: "TestEntity.ExpressionMap",
      type: "object",
    },
    DateMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "DateMatrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_DateMatrix",
      title: "TestEntity.DateMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_DateMatrix_item",
        title: "TestEntity.DateMatrix item",
        type: "object",
        properties: {
          value: {
            format: "date-time",
            id: "CE_TestEntity_DateMatrix_value",
            title: "TestEntity.DateMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              DateMatrix1: {
                nullable: false,
                id: "CE_TestEntity_DateMatrix_key_DateMatrix1",
                title:
                  "TestEntity.DateMatrix Key column DateMatrix1 @ 1 - DateMatrix1",
                type: "string",
              },
              DateMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_DateMatrix_key_DateMatrix2",
                title:
                  "TestEntity.DateMatrix Key column DateMatrix2 @ 2 - DateMatrix2",
                type: "string",
              },
            },
            required: ["DateMatrix1", "DateMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    DoubleMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Double Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_DoubleMatrix",
      title: "TestEntity.DoubleMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_DoubleMatrix_item",
        title: "TestEntity.DoubleMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_DoubleMatrix_value",
            title: "TestEntity.DoubleMatrix Value",
            type: "number",
          },
          key: {
            type: "object",
            properties: {
              DoubleMatrix1: {
                nullable: false,
                id: "CE_TestEntity_DoubleMatrix_key_DoubleMatrix1",
                title:
                  "TestEntity.DoubleMatrix Key column DoubleMatrix1 @ 1 - DoubleMatrix1",
                type: "string",
              },
              DoubleMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_DoubleMatrix_key_DoubleMatrix2",
                title:
                  "TestEntity.DoubleMatrix Key column DoubleMatrix2 @ 2 - DoubleMatrix2",
                type: "string",
              },
            },
            required: ["DoubleMatrix1", "DoubleMatrix2"],
          },
        },
        required: ["key"],
      },
    },
    RefEntityMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          id: "CE_TestEntity_RefEntityMap_item",
          title: "TestEntity.RefEntityMap item",
          $ref: "./ChildEntity",
        },
      },
      nullable: true,
      description: "Reference to Entity Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_RefEntityMap",
      title: "TestEntity.RefEntityMap",
      type: "object",
    },
    BooleanMap: {
      storages: ["SQL"],
      patternProperties: {
        "^.*$": {
          default: "false",
          id: "CE_TestEntity_BooleanMap_item",
          title: "TestEntity.BooleanMap item",
          type: "string",
        },
      },
      nullable: true,
      description: "Boolean Map",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_BooleanMap",
      title: "TestEntity.BooleanMap",
      type: "object",
    },
    EmbeddedEntityMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Embedded Entity Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_EmbeddedEntityMatrix",
      title: "TestEntity.EmbeddedEntityMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_EmbeddedEntityMatrix_item",
        title: "TestEntity.EmbeddedEntityMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_EmbeddedEntityMatrix_value",
            title: "TestEntity.EmbeddedEntityMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              EmbeddedEntityMat1: {
                nullable: false,
                id: "CE_TestEntity_EmbeddedEntityMatrix_key_EmbeddedEntityMat1",
                title:
                  "TestEntity.EmbeddedEntityMatrix Key column EmbeddedEntityMat1 @ 1 - EmbeddedEntityMat1",
                type: "string",
              },
              EmbeddedEntityMat2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_EmbeddedEntityMatrix_key_EmbeddedEntityMat2",
                title:
                  "TestEntity.EmbeddedEntityMatrix Key column EmbeddedEntityMat2 @ 2 - EmbeddedEntityMat2",
                type: "string",
              },
            },
            required: ["EmbeddedEntityMat1", "EmbeddedEntityMat2"],
          },
        },
        required: ["key"],
      },
    },
    LongSingle: {
      storages: ["SQL"],
      nullable: true,
      description: "Long Single",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_LongSingle",
      title: "TestEntity.LongSingle",
      type: "integer",
    },
    SecretMatrix: {
      storages: ["SQL"],
      nullable: true,
      uniqueItems: true,
      description: "Secret Matrix",
      readOnly: false,
      versionable: false,
      id: "CE_TestEntity_SecretMatrix",
      title: "TestEntity.SecretMatrix",
      type: "array",
      items: {
        id: "CE_TestEntity_SecretMatrix_item",
        title: "TestEntity.SecretMatrix item",
        type: "object",
        properties: {
          value: {
            id: "CE_TestEntity_SecretMatrix_value",
            title: "TestEntity.SecretMatrix Value",
            type: "string",
          },
          key: {
            type: "object",
            properties: {
              SecretMatrix1: {
                nullable: false,
                id: "CE_TestEntity_SecretMatrix_key_SecretMatrix1",
                title:
                  "TestEntity.SecretMatrix Key column SecretMatrix1 @ 1 - SecretMatrix1",
                type: "string",
              },
              SecretMatrix2: {
                nullable: false,
                pattern: "^(\\d+)?\\.\\.(\\d+)?$",
                id: "CE_TestEntity_SecretMatrix_key_SecretMatrix2",
                title:
                  "TestEntity.SecretMatrix Key column SecretMatrix2 @ 2 - SecretMatrix2",
                type: "string",
              },
            },
            required: ["SecretMatrix1", "SecretMatrix2"],
          },
        },
        required: ["key"],
      },
    },
  },
  required: ["StringSingle"],
};
